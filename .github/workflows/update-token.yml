name: Update Bearer Token

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour
  workflow_dispatch:

jobs:
  update-token:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Get Bearer Token
        id: get_token
        run: |
          response=$(curl -s -X POST https://cognito-idp.eu-west-1.amazonaws.com/ \
            -H "Content-Type: application/x-amz-json-1.1" \
            -H "X-Amz-Target: AWSCognitoIdentityProviderService.InitiateAuth" \
            -d '{
              "AuthParameters" : {
                "USERNAME" : "'"${{ secrets.COGNITO_USERNAME }}"'",
                "PASSWORD" : "'"${{ secrets.COGNITO_PASSWORD }}"'"
              },
              "AuthFlow" : "USER_PASSWORD_AUTH",
              "ClientId" : "'"${{ secrets.COGNITO_CLIENT_ID }}"'"
            }')
          echo "Response: $response"
          token=$(echo $response | jq -r '.AuthenticationResult.IdToken')
          if [ -z "$token" ]; then
            echo "Failed to obtain bearer token"
            exit 1
          fi
          echo "BEARER_TOKEN=$token" >> $GITHUB_ENV
          echo "::add-mask::$token" # Mask the token in logs for security

      - name: Get Public Key
        id: get_public_key
        run: |
          echo "Fetching the latest public key..."
          RESPONSE=$(curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/lyuboslav2406/status-xrm/actions/secrets/public-key)
          echo "$RESPONSE" > public_key.json

      - name: Encrypt Secret Value
        id: encrypt_secret
        run: |
          echo "Encrypting secret value..."
          PUBLIC_KEY=$(jq -r '.key' public_key.json)
          ENCRYPTED_VALUE=$(node -e "const sodium = require('sodium-native'); const publicKey = Buffer.from('${PUBLIC_KEY}', 'base64'); const message = Buffer.from('${{ env.BEARER_TOKEN }}'); const ciphertext = Buffer.alloc(sodium.crypto_box_SEALBYTES + message.length); sodium.crypto_box_seal(ciphertext, message, publicKey); console.log(ciphertext.toString('base64'));")
          echo "ENCRYPTED_VALUE=$ENCRYPTED_VALUE" >> $GITHUB_ENV

      - name: Update Repository Secret
        run: |
          echo "Updating repository secret..."
          curl -L -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/lyuboslav2406/status-xrm/actions/secrets/BEARER_TOKEN \
            -d "{\"encrypted_value\":\"${{ env.ENCRYPTED_VALUE }}\",\"key_id\":\"${{ steps.get_public_key.outputs.key_id }}\"}"
