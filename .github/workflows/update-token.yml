name: Update Bearer Token

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour
  workflow_dispatch:

jobs:
  update-token:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Get Bearer Token
        id: get_token
        run: |
          response=$(curl -s -X POST https://cognito-idp.eu-west-1.amazonaws.com/ \
            -H "Content-Type: application/x-amz-json-1.1" \
            -H "X-Amz-Target: AWSCognitoIdentityProviderService.InitiateAuth" \
            -d '{
              "AuthParameters" : {
                "USERNAME" : "'"${{ secrets.COGNITO_USERNAME }}"'",
                "PASSWORD" : "'"${{ secrets.COGNITO_PASSWORD }}"'"
              },
              "AuthFlow" : "USER_PASSWORD_AUTH",
              "ClientId" : "'"${{ secrets.COGNITO_CLIENT_ID }}"'"
            }')
          echo "Response: $response"
          token=$(echo $response | jq -r '.AuthenticationResult.IdToken')
          if [ -z "$token" ]; then
            echo "Failed to obtain bearer token"
            exit 1
          fi
          echo "::set-env name=BEARER_TOKEN::$token" # Set environment variable
          echo "::add-mask::$token" # Mask the token in logs for security
          echo "::set-output name=token::$token" # Set output variable for later steps

      - name: Update Repository Secret
        uses: srt32/update-repo-secret@v1
        with:
          secret_name: BEARER_TOKEN
          new_secret_value: ${{ steps.get_token.outputs.token }}
